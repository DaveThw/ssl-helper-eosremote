#
# OpenSSL configuration file.
#
# Based on the OpenSSL example configuration file, modified and tweaked
#  by DRT for EosRemote, to use as the configuration file for our CA
#

# This definition stops the following lines choking if HOME isn't
# defined.
HOME			= .
RANDFILE		= $ENV::HOME/.rnd
ssl_dir			= $ENV::HOME/EosRemote/ssl
CA_dir			= $ssl_dir/CA

# To use this configuration file with the "-extfile" option of the
# "openssl x509" utility, name here the section containing the
# X.509v3 extensions to use:
# extensions		= 
# (Alternatively, use a configuration file that has only
# X.509v3 extensions in its main [= default] section.)


####################################################################

[ ca ]
default_ca		= CA_default	# The default ca section

####################################################################
[ CA_default ]

# dir		= ./CA			# Where everything is kept
# Don't think these next two options are actually used - they're not in the documentation at:
#   https://www.openssl.org/docs/man1.1.0/apps/ca.html#CONFIGURATION-FILE-OPTIONS
# certs		= $CA_dir/certs		# Where the issued certs are kept
# crl_dir	= $CA_dir/crl		# Where the issued crl are kept
database	= $CA_dir/index.txt	# database index file.
unique_subject	= no			# Set to 'no' to allow creation of
					# several certs with same subject.
new_certs_dir	= $CA_dir/newcerts	# default place for new certs.
#certificate	= $CA_dir/cacert.pem 	# The CA certificate
certificate	= $ssl_dir/ca-cert.pem 	# The CA certificate
serial		= $CA_dir/serial 	# The current serial number
crlnumber	= $CA_dir/crlnumber	# the current crl number
					# must be commented out to leave a V1 CRL
# This option also doesn't appear in the documentation...
# crl		= $CA_dir/crl.pem 	# The current CRL
private_key	= $CA_dir/private/ca-key.pem # The private key
RANDFILE	= $CA_dir/private/.rand	# private random number file

x509_extensions		= usr_cert	# The extensions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt 		= ca_default	# Subject Name options
cert_opt 		= ca_default	# Certificate field options

# Extension copying option: use with caution.
copy_extensions		= copy

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crlnumber must also be commented out to leave a V1 CRL.
# crl_extensions	= crl_ext

default_days		= 365		# how long to certify for
default_crl_days	= 30		# how long before next CRL
default_md		= default	# use public key default MD
preserve		= no		# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy			= policy_anything

# For the CA policy
[ policy_match ]
countryName		= match
stateOrProvinceName	= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

####################################################################

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints	= critical, CA:FALSE

# This is typical in keyUsage for a client certificate.
# keyUsage		= nonRepudiation, digitalSignature, keyEncipherment

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier	= hash
authorityKeyIdentifier	= keyid,issuer

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName	= email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
subjectAltName		= email:move

# Copy subjectAltName details from issuer certificate
# issuerAltName		= issuer:copy


####################################################################

# Settings for when we generate our self-signed CA certificate

[req]
# dir			= ./CA
default_bits		= 2048
# default_keyfile 	= $CA_dir/private/cakey.pem
default_keyfile 	= $CA_default::private_key
# RANDFILE		= $CA_dir/private/.rand
RANDFILE		= $CA_default::RANDFILE
encrypt_key		= no
default_md		= sha256
string_mask		= utf8only
# req_extensions	= req_ext
x509_extensions		= v3_ca	# The extensions to add to the self signed cert
prompt			= no
# attributes		= req_attributes
distinguished_name	= dn

[ dn ]
C			= UK
ST			= Suffolk
L			= Bury St Edmunds
O			= EosRemote
OU			= https://github.com/DaveThw/EosRemote/
# emailAddress		= eosremote@dave.thwaites.org.uk
CN			= EosRemote LAN Server CA

[ v3_ca ]
# Extensions for a (typical) CA

# PKIX recommendation.

subjectKeyIdentifier	= hash

authorityKeyIdentifier	= keyid:always, issuer

basicConstraints	= critical, CA:true, pathlen:0

# Key usage: this is typical for a CA certificate.
keyUsage		= critical, cRLSign, keyCertSign

# Include email address in subject alt name: another PKIX recommendation
# subjectAltName  	= email:copy
# subjectAltName  	= email:move
subjectAltName  	= email:eosremote@dave.thwaites.org.uk
# Copy issuer details
# issuerAltName		= issuer:copy
